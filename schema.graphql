enum MarketStatus {
  Opened
  Paused
  Closed
}

enum OrderType {
  Sell
  Buy
}

# enum MarketEventIdentifier {
#   MarketCreateEvent
#   MarketCloseEvent
#   CloMarketPauseEventsed
#   MarketUnpauseEvent
# }

enum OrderStatus {
  Active
  Closed
  Canceled
}

type UserPnl {
  id: ID!
  trader: String! @index
  market: String! @index
  owedRealizedPnl: BigInt! @index
  timestamp: String!
}
type UserAccountBalance {
  id: ID!
  market: String! @index
  trader: String! @index
  baseToken: String!
  takerPositionSize: BigInt!
  takerOpenNotional: BigInt!
  lastTwPremiumGrowthGlobal: BigInt!
  timestamp: String!
}
############## AccountBalance

type OwedRealizedPnlChangeEvent {
  id: ID!
  market: String! @index
  trader: String! @index
  owedRealizedPnl: BigInt!
  timestamp: String!
  txId: String! @index
}

type AccountBalanceChangeEvent {
  id: ID!
  market: String! @index
  trader: String! @index
  baseToken: String!
  takerPositionSize: BigInt!
  takerOpenNotional: BigInt!
  lastTwPremiumGrowthGlobal: BigInt!
  timestamp: String!
  txId: String! @index
}

############## ClearingHouse

type MarketEvent {
  id: ID!
  sender: String! @index
  market: String! @index

  assetId: String!
  decimal: BigInt!
  priceFeed: String!
  imRatio: BigInt!
  mmRatio: BigInt!
  status: MarketStatus!
  pausedIndexPrice: BigInt
  pausedTimestamp: BigInt
  closedPrice: BigInt

  identifier: String!
  timestamp: String!
  txId: String! @index
}

type Market {
  id: ID!

  assetId: String!
  decimal: BigInt!
  priceFeed: String!
  imRatio: BigInt!
  mmRatio: BigInt!
  status: MarketStatus!
  pausedIndexPrice: BigInt
  pausedTimestamp: BigInt
  closedPrice: BigInt

  identifier: String!
  timestamp: String!
}



############## PerpMarket

type TradeEvent {
  id: ID!
  # baseToken: String! @index

  sellOrderId: String! @index
  buyOrderId: String! @index

  tradeSize: BigInt! @index
  tradePrice: BigInt! @index

  seller: String! @index
  buyer: String! @index

  # timestamp: String!
  txId: String! @index
  contractTimestamp: BigInt!
  timestamp: String!
}

type OrderEvent {
  id: ID!
  market: String! @index

  trader: String @index
  orderId: String! @index
  identifier: String!
  baseSizeI64: BigInt
  baseSize: BigInt
  price: BigInt
  txId: String! @index
  contractTimestamp: BigInt!
  timestamp: String!
}

type Order {
  id: ID!
  market: String! @index
  # asset: String! @index
  baseSizeI64: BigInt
  baseSize: BigInt
  price: BigInt! @index
  trader: String! @index
  orderType: OrderType! @index
  status: OrderStatus! @index
  # initialAmount: BigInt!
  contractTimestamp: BigInt!
  timestamp: String!
}

type ActiveSellOrder {
  id: ID!
  market: String! @index
  # asset: String! @index
  baseSizeI64: BigInt
  baseSize: BigInt
  price: BigInt! @index
  trader: String! @index
  orderType: OrderType! @index
  status: OrderStatus! @index
  # initialAmount: BigInt!
  contractTimestamp: BigInt!
  timestamp: String!
}

type ActiveBuyOrder {
  id: ID!
  market: String! @index
  # asset: String! @index
  baseSizeI64: BigInt
  baseSize: BigInt
  price: BigInt! @index
  trader: String! @index
  orderType: OrderType! @index
  status: OrderStatus! @index
  # initialAmount: BigInt!
  contractTimestamp: BigInt!
  timestamp: String!
}

type OpenOrderEvent {
  id: ID!
  market: String! @index

  trader: String @index
  orderId: String! @index
  identifier: String!
  baseSizeI64: BigInt
  baseSize: BigInt
  price: BigInt
  txId: String! @index
  contractTimestamp: BigInt!
  timestamp: String!
}

type RemoveUncollaterizedEvent {
  id: ID!
  market: String! @index

  trader: String @index
  orderId: String! @index
  identifier: String!
  baseSizeI64: BigInt
  baseSize: BigInt
  price: BigInt
  txId: String! @index
  contractTimestamp: BigInt!
  timestamp: String!
}

type RemoveEvent  {
  id: ID!
  market: String! @index
  trader: String @index
  orderId: String! @index
  baseSizeI64: BigInt
  baseSize: BigInt
  price: BigInt
  txId: String! @index
}

type RemoveAllEvent  {
  id: ID!
  market: String! @index
  trader: String @index
  orderId: String! @index
  baseSizeI64: BigInt
  baseSize: BigInt
  price: BigInt
  txId: String! @index
}

type MatchEvent  {
  id: ID!
  market: String! @index
  trader: String @index
  orderId: String! @index
  baseSizeI64: BigInt
  baseSize: BigInt
  price: BigInt
  txId: String! @index
}

type FulfillEvent  {
  id: ID!
  market: String! @index
  trader: String @index
  orderId: String! @index
  baseSizeI64: BigInt
  baseSize: BigInt
  price: BigInt
  txId: String! @index
}

############## Vault 

type CollateralChangeEvent  {
  id: ID!
  market: String! @index
  trader: String @index
  newBalance: BigInt @index
  txId: String! @index
  timestamp: String!
}

type Collateral  {
  id: ID!
  market: String! @index
  trader: String @index
  newBalance: BigInt @index
  timestamp: String!
}